Changes in module 'nf-core/dragonflye'
--- modules/nf-core/dragonflye/environment.yml
+++ modules/nf-core/dragonflye/environment.yml
@@ -3,4 +3,4 @@
   - bioconda
   - defaults
 dependencies:
-  - bioconda::dragonflye=1.0.11
+  - bioconda::dragonflye=1.1.2

--- modules/nf-core/dragonflye/meta.yml
+++ modules/nf-core/dragonflye/meta.yml
@@ -18,7 +18,7 @@
         e.g. [ id:'test', single_end:false ]
   - reads:
       type: file
-      description: Input Nanopore FASTQ file
+      description: Input Nanopore FASTQ file. Optional, additional Illumina FASTQ files can be provided to perform short reads polishing.
       pattern: "*.fastq.gz"
 output:
   - meta:

--- modules/nf-core/dragonflye/main.nf
+++ modules/nf-core/dragonflye/main.nf
@@ -4,17 +4,17 @@
 
     conda 'modules/nf-core/dragonflye/environment.yml'
     container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
-        'https://depot.galaxyproject.org/singularity/dragonflye:1.0.11--hdfd78af_0' :
-        'biocontainers/dragonflye:1.0.11--hdfd78af_0' }"
+        'https://depot.galaxyproject.org/singularity/dragonflye:1.1.2--hdfd78af_0' :
+        'biocontainers/dragonflye:1.1.2--hdfd78af_0' }"
 
     input:
-    tuple val(meta), path(reads)
+    tuple val(meta), path(shortreads), path(longreads)
 
     output:
-    tuple val(meta), path("contigs.fa")                                        , emit: contigs
+    tuple val(meta), path("*.contigs.fa")                                      , emit: contigs
     tuple val(meta), path("dragonflye.log")                                    , emit: log
     tuple val(meta), path("{flye,miniasm,raven}.fasta")                        , emit: raw_contigs
-    tuple val(meta), path("{miniasm,raven}-unpolished.gfa"), optional:true     , emit: gfa
+    tuple val(meta), path("{flye,miniasm,raven}-unpolished.gfa"), optional:true, emit: gfa
     tuple val(meta), path("flye-info.txt"), optional:true                      , emit: txt
     path "versions.yml"                                                        , emit: versions
 
@@ -23,11 +23,15 @@
 
     script:
     def args = task.ext.args ?: ''
+    def prefix = task.ext.prefix ?: "${meta.id}"
     def memory = task.memory.toGiga()
+    def short_polishing = shortreads ? "--R1 ${shortreads[0]} --R2 ${shortreads[1]}" : '' 
     """
     dragonflye \\
-        --reads ${reads} \\
+        --reads ${longreads} \\
+        $short_polishing \\
         $args \\
+        --prefix ${prefix}.contigs \\
         --cpus $task.cpus \\
         --ram $memory \\
         --outdir ./ \\

************************************************************
